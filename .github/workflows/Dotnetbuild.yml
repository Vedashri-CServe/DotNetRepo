# This is a basic workflow to help you get started with Actions

name: net 6.0 build pipeline
 
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "design_development" ]
  
 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# Providing permission for git  
permissions:
  contents: write
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
  
jobs:
  DevCodeScan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
           fetch-depth: 0
           
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17' 

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x  

      # - name: Restore dependencies
      #   run: dotnet restore
      - name: SonarQube scanner tool
        run: dotnet tool install --global dotnet-sonarscanner
        
      - name: SonarQube Analysis
        env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        # run: dotnet sonarscanner begin /k:"TMS_Stage_DOTNET" /d:sonar.host.url="http://sonar.pathquest.com:9000/" /d:sonar.token="sqa_febb7b1417dcdaa9d170935a3f177d5a949bfdda"
        run: dotnet sonarscanner begin /k:"TMS_Stage_DOTNET" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Build project
        run: dotnet build --configuration Release

      - name: SonarQube End Analysis
        # run: dotnet sonarscanner end /d:sonar.token="sqa_febb7b1417dcdaa9d170935a3f177d5a949bfdda"  
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        
  SonarScanned:
    needs: DevCodeScan
    runs-on: windows-latest
    # Git push steps to check_sonar branch
    steps:
            
      - name: Fetch remote branches
        run: git fetch origin     

      - name: Push code to check_sonar branch
        run: |
          git config --global user.name Vedashri-CServe
          git config --global user.email vedashri@cloudservesystems.com
          git add . 
          git status
          git checkout check_sonar
          git checkout design_dev .
          git commit -m "Sonar Check dotnet"
          git push origin check_sonar
